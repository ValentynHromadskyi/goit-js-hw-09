{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,yBAC/BE,MAAOH,SAASC,cAAc,uBAC9BG,KAAMJ,SAASC,cAAc,sBAC7BI,OAAQL,SAASC,cAAc,wBAC/BK,KAAMN,SAASC,cAAc,QAC7BM,MAAOP,SAASC,cAAc,UAGhC,IAAIO,EAAW,EA4Bf,SAASC,EAAcC,EAAUP,GAC/B,OAAO,IAAIQ,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,OAASC,YAAW,KACdJ,EACFF,EAAQ,CAAEO,SAAAT,E,MAAUP,IAEpBU,EAAO,CAAEM,SAAAT,E,MAAUP,GAAQ,GAE5BA,EAAM,G,CAnCbL,EAAKC,KAAKqB,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAMC,iBACN,IAAIjB,EAASP,EAAKO,OAAOkB,MACzB,MAAMnB,EAAOoB,OAAO1B,EAAKM,KAAKmB,OAC9B,IAAIE,EAAQD,OAAO1B,EAAKK,MAAMoB,OAE9B,IAAK,IAAIG,EAAI,EAAGA,EAAIrB,EAAQqB,GAAK,EAC/BlB,GAAY,EAEZC,EAAcD,EAAUiB,GACrBE,MAAK,EAAGR,SAAAS,EAAQzB,MAAEA,MACjBP,EAAAiC,OAAOC,QAAQ,uBAAqBF,QAAiBzB,MAAW,CAC5DgB,SAAQ,cACV,IAEHY,OAAM,EAAGZ,SAAAa,EAAQ7B,MAAEA,MAClBP,EAAAiC,OAAOI,QAAQ,sBAAoBD,QAAe7B,MAAW,CAC3DgB,SAAU,cACV,IAENM,GAASrB,C,IAkBXN,EAAKQ,KAAK4B,MAAMC,gBAAkB,iBAClCrC,EAAKC,KAAKmC,MAAME,QACd","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  button: document.querySelector('button[type=\"submit\"]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  body: document.querySelector('body'),\n  input: document.querySelector('label'),\n};\n\nlet position = 0;\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  let amount = refs.amount.value;\n  const step = Number(refs.step.value);\n  let delay = Number(refs.delay.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          position: 'center-top',\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          position: 'center-top',\n        });\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    timeId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction style() {\n  refs.body.style.backgroundColor = 'MediumSeaGreen';\n  refs.form.style.cssText =\n    'position: absolute;top: 50%; left: 50%;transform: translateX(-50%) translateY(-50%);color: black ;font-size: 20px;letter-spacing: 2px;display: flex; gap: 30px;';\n }\nstyle();\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","button","delay","step","amount","body","input","$47d4ff9957288465$var$position","$47d4ff9957288465$var$createPromise","position3","Promise","resolve","reject","shouldResolve","Math","random","timeId","setTimeout","position","addEventListener","event","preventDefault","value","Number","delay1","i","then","position1","Notify","success","catch","position2","failure","style","backgroundColor","cssText"],"version":3,"file":"03-promises.f5ce08ef.js.map"}